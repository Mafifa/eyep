name: Build and Release EyeP

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build app for ${{ matrix.os }}
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            npm run build:win
          else
            npm run build:mac
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: eyep-${{ matrix.os }}
          path: dist/** # Sube todo el contenido de 'dist/'
          compression-level: 0 # Evita compresión para preservar estructura

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Extract version from tag
        id: extract_version
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      # Extraer artifact de Windows
      - name: Extract Windows Artifact
        run: |
          mkdir -p artifacts/eyep-windows-latest/dist
          unzip artifacts/eyep-windows-latest.zip -d artifacts/eyep-windows-latest/dist

      # Extraer artifact de macOS
      - name: Extract macOS Artifact
        run: |
          mkdir -p artifacts/eyep-macos-latest/dist
          unzip artifacts/eyep-macos-latest.zip -d artifacts/eyep-macos-latest/dist

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            **eyep v${{ env.VERSION }}**  
            - Mejoras en el temporizador  
            - Corrección de errores

      # Subir todos los archivos de Windows
      - name: Upload Windows Assets
        run: |
          cd artifacts/eyep-windows-latest/dist
          for file in *; do
            gh release upload ${{ github.ref }} "$file" --clobber
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Subir todos los archivos de macOS
      - name: Upload macOS Assets
        run: |
          cd artifacts/eyep-macos-latest/dist
          for file in *; do
            gh release upload ${{ github.ref }} "$file" --clobber
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
