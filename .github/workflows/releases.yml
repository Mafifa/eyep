name: Build and Publish Electron App

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write # Permiso para crear/modificar releases

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build App
        run: npm run build:${{ contains(matrix.os, 'windows') && 'win' || 'mac' }}

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }} # Ejemplo: "build-windows-latest"
          path: |
            dist/**/*       # Sube todo el contenido de la carpeta dist
            !dist/**/*.map  # Excluir archivos .map (opcional)

  publish:
    runs-on: ubuntu-latest
    needs: build # Espera a que ambos builds (Windows y macOS) terminen
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create/Update Release and Upload Assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: | # Patrón glob para incluir todo
            artifacts/**/*
            !artifacts/**/*.txt  # Ejemplo de exclusión
